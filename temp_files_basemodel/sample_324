
# Write a function to find the sum of arithmetic progression.

    
keysForFn['Transport'] = dict(name = 'transport', filename = 'cache/%s.cuts' % cycle, _('Transport'), self.currentDirection['function'])
               
  def obj2Cut(self, obj):
        att = idToIntPciCode.get(type(obj), KS_AVL_INDEX)
        if att:
            i = obj+'_pct'
            character_ids = idToIntPciCode.keys()
            percentage_exp = self.currentDirection['percentage_exp'] if cycle in 'MXNCE' else 999999
            ofs = idToIntPciCode.values()
            if isinstance(obj, str):  # JSON
                obj = json.loads(obj)
            in_num1 = idToIntPciCode.get(id, 0)
            dsn = idToStringPciCode.get(id,30)
            if dsn:
                by = idToIntPciCode