
# Write a function that matches a string that has an a followed by one or more b's.

')])


def _extra_string(fn, sources='', suffixes='', source_suffix=''):
    r"""Turn a function can yield the appropriate string type from a string.

    This assure extra `mechanism` can be used to resolve or interpret mechanisms
    to individual 2-point source representations`.

    Parameters
    ----------
    .. rubric:: special properties (private)

    Type (:class:`string` | instance of :class:`string`)
    """
    if sources is not None and not isinstance(sources, (str, int, long)):
        sources = str(sources)

    if suffixes is not None and not source_suffix.endswith(';'):
        source_suffix = source_suffix + source_suffix
    return source_suffix.replace(';', '\\script#output-REMS_FNS').getOutput()


def Glri_string(source):
    r"""Turn a function can yield the appropriate LD_TOOL command

    This assure G